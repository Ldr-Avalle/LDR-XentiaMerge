tableextension 50174 Item_LDR extends " Item "
{
    // IZERTIS 310317 OVM
    //   New Fields
    //     accessories            ,50000;
    //     On Deposit             ,50001;
    //     Quantity returns orders,50002;
    //   New Code
    //     Assing Const
    //     Assing Dim
    //   Modify Property
    //     Description      ,7  , Change Zise 50 to 70
    //     Profit %         ,20 , MaxValue=99,99999
    //     Inventory        ,68 ,Add Date Filter
    //     Net Invoiced Qty.,69 ,Add Date Filter, Sale
    DataCaptionFields = "Reordering Policy";
    fields
    {
        modify(Description)
        {
            Description = 'SERCABLE';
        }
        modify("Profit %")
        {
            Description = 'SERCABLE';
        }
        modify(Inventory)
        {
            //Unsupported feature: Property Modification (CalcFormula) on "Inventory(Field 68)".
            Description = 'SERCABLE';
        }
        modify("Net Invoiced Qty.")
        {
            //Unsupported feature: Property Modification (CalcFormula) on ""Net Invoiced Qty."(Field 69)".
            Description = 'SERCABLE';
        }
        modify("Gen. Prod. Posting Group")
        {
            Caption = 'Gen. Prod. Posting Group';
        }
        modify("VAT Prod. Posting Group")
        {
            Caption = 'VAT Prod. Posting Group';
        }
        //Unsupported feature: Property Modification (CalcFormula) on ""Planning Transfer Ship. (Qty)."(Field 5449)".
        modify("Planned Order Receipt (Qty.)")
        {
            Caption = 'Planned Order Receipt (Qty.)';
        }
        modify("Qty. on Component Lines")
        {
            Caption = 'Qty. on Component Lines';
        }
        //Unsupported feature: Code Insertion (VariableCollection) on ""No."(Field 1).OnValidate".
        //trigger (Variable: Proyecto)()
        //Parameters and return type have not been exported.
        //begin
            /*
            */
        //end;
        //Unsupported feature: Code Insertion (VariableCollection) on "Description(Field 3).OnValidate".
        //trigger (Variable: Proyecto)()
        //Parameters and return type have not been exported.
        //begin
            /*
            */
        //end;
        //Unsupported feature: Code Modification on "Description(Field 3).OnValidate".
        //trigger OnValidate()
        //Parameters and return type have not been exported.
        //>>>> ORIGINAL CODE:
        //begin
            /*
            IF ("Search Description" = UPPERCASE(xRec.Description)) OR ("Search Description" = '') THEN
              "Search Description" := Description;
            #4..9
                  NonstockItem.MODIFY;
                END;
            END;
            */
        //end;
        //>>>> MODIFIED CODE:
        //begin
            /*
            #1..12
            //Begin --IZERTIS 310317 Assing Dim
            Proyecto := UserDim.getProjectDim(USERID);
            VALIDATE("Global Dimension 1 Code",Proyecto);
            //End --IZERTIS 310317 Assing Dim
            */
        //end;
        //Unsupported feature: Deletion on ""Lead Time Calculation"(Field 33).OnValidate".
        //Unsupported feature: Code Modification on ""Price Includes VAT"(Field 87).OnValidate".
        //trigger OnValidate()
        //Parameters and return type have not been exported.
        //>>>> ORIGINAL CODE:
        //begin
            /*
            IF "Price Includes VAT" THEN BEGIN
              SalesSetup.GET;
              SalesSetup.TESTFIELD("VAT Bus. Posting Gr. (Price)");
              "VAT Bus. Posting Gr. (Price)" := SalesSetup."VAT Bus. Posting Gr. (Price)";
              VATPostingSetup.GET("VAT Bus. Posting Gr. (Price)","VAT Prod. Posting Group");
            END;
            VALIDATE("Price/Profit Calculation");
            */
        //end;
        //>>>> MODIFIED CODE:
        //begin
            /*
            IF "Price Includes VAT" THEN BEGIN
              SalesSetup.GET;
              IF SalesSetup."VAT Bus. Posting Gr. (Price)" <> '' THEN
                "VAT Bus. Posting Gr. (Price)" := SalesSetup."VAT Bus. Posting Gr. (Price)";
            #5..7
            */
        //end;
        //Unsupported feature: Property Deletion (DataClassification) on ""Application Wksh. User ID"(Field 521)".
        //Unsupported feature: Code Modification on ""Phys Invt Counting Period Code"(Field 7380).OnValidate".
        //trigger OnValidate()
        //Parameters and return type have not been exported.
        //>>>> ORIGINAL CODE:
        //begin
            /*
            IF "Phys Invt Counting Period Code" <> '' THEN BEGIN
              PhysInvtCountPeriod.GET("Phys Invt Counting Period Code");
              PhysInvtCountPeriod.TESTFIELD("Count Frequency per Year");
            #4..11
                  THEN
                    ERROR(Text7381);
                IF ("Last Counting Period Update" = 0D) OR
                   ("Phys Invt Counting Period Code" <> xRec."Phys Invt Counting Period Code")
                THEN
                  PhysInvtCountPeriodMgt.CalcPeriod(
                    "Last Counting Period Update","Next Counting Start Date","Next Counting End Date",
                    PhysInvtCountPeriod."Count Frequency per Year");
              END;
            END ELSE BEGIN
              IF CurrFieldNo <> 0 THEN
            #24..26
              "Next Counting End Date" := 0D;
              "Last Counting Period Update" := 0D;
            END;
            */
        //end;
        //>>>> MODIFIED CODE:
        //begin
            /*
            #1..14
                PhysInvtCountPeriodMgt.CalcPeriod(
                  "Last Counting Period Update","Next Counting Start Date","Next Counting End Date",
                  PhysInvtCountPeriod."Count Frequency per Year",
                  ("Last Counting Period Update" = 0D) OR
                  ("Phys Invt Counting Period Code" <> xRec."Phys Invt Counting Period Code"));
            #21..29
            */
        //end;
        field(50000;accessories;Boolean)
        {
            Caption = 'Accesorios';
            Description = 'SERCABLE';
        }
        field(50001;"On Deposit";Boolean)
        {
            Caption = 'En Dep´Š¢sito';
            Description = 'SERCABLE';
        }
        field(50002;"Quantity returns orders";Decimal)
        {
            CalcFormula = Sum("Purchase Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Return Order),
                                                                               Type=CONST(Item),
                                                                               No.=FIELD(No.),
                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                               Location Code=FIELD(Location Filter),
                                                                               Drop Shipment=FIELD(Drop Shipment Filter),
                                                                               Variant Code=FIELD(Variant Filter),
                                                                               Bin Code=FIELD(Bin Filter),
                                                                               Expected Receipt Date=FIELD(Date Filter)));
            DecimalPlaces = 0:5;
            Description = 'SERCABLE';
            FieldClass = FlowField;
        }
    }
    //Unsupported feature: Code Insertion (VariableCollection) on "OnInsert".
    //trigger (Variable: ItemUnitMeasure)()
    //Parameters and return type have not been exported.
    //begin
        /*
        */
    //end;
    //Unsupported feature: Code Modification on "OnInsert".
    //trigger OnInsert()
    //>>>> ORIGINAL CODE:
    //begin
        /*
        IF "No." = '' THEN BEGIN
          GetInvtSetup;
          InvtSetup.TESTFIELD("Item Nos.");
        #4..6
        DimMgt.UpdateDefaultDim(
          DATABASE::Item,"No.",
          "Global Dimension 1 Code","Global Dimension 2 Code");
        */
    //end;
    //>>>> MODIFIED CODE:
    //begin
        /*
        #1..9
        //Begin --IZERTIS 310317 Assing Const
        Proyecto := UserDim.getProjectDim(USERID);
        "Global Dimension 1 Code" := Proyecto;
        //CARLOS COSME - default info
        //001
        //"Gen. Prod. Posting Group" := 'MERCADERIA';
        ConfInventario.GET;
        "Gen. Prod. Posting Group" := ConfInventario."Grupo contable producto";
        "VAT Prod. Posting Group" := 'IVA21';
        //"Inventory Posting Group" := 'MERCADERIA';
        "Inventory Posting Group" := ConfInventario."Grupo contable inventario";
        //001
        "Costing Method" := "Costing Method"::Average;
        VALIDATE("Price Includes VAT", TRUE);
        "Base Unit of Measure" := 'UDS';
        "Sales Unit of Measure" := 'UDS';
        "Purch. Unit of Measure" := 'UDS';
        ItemUnitMeasure.INIT;
        ItemUnitMeasure."Item No." := "No.";
        ItemUnitMeasure.Code := 'UDS';
        ItemUnitMeasure."Qty. per Unit of Measure" := 1;
        IF ItemUnitMeasure.INSERT THEN ;
        //End --IZERTIS 310317 Assing Const
        */
    //end;
    //Unsupported feature: Code Modification on "TestNoEntriesExist(PROCEDURE 1006)".
    //procedure TestNoEntriesExist();
    //Parameters and return type have not been exported.
    //>>>> ORIGINAL CODE:
    //begin
        /*
        IF "No." = '' THEN
          EXIT;
        ItemLedgEntry.SETCURRENTKEY("Item No.");
        ItemLedgEntry.SETRANGE("Item No.","No.");
        IF NOT ItemLedgEntry.ISEMPTY THEN
          ERROR(
            Text007,
            CurrentFieldName);
        PurchaseLine.SETCURRENTKEY("Document Type",Type,"No.");
        PurchaseLine.SETFILTER(
          "Document Type",'%1|%2',
          PurchaseLine."Document Type"::Order,
          PurchaseLine."Document Type"::"Return Order");
        PurchaseLine.SETRANGE(Type,PurchaseLine.Type::Item);
        PurchaseLine.SETRANGE("No.","No.");
        IF PurchaseLine.FINDFIRST THEN
          ERROR(
            Text008,
            CurrentFieldName,
            PurchaseLine."Document Type");
        */
    //end;
    //>>>> MODIFIED CODE:
    //begin
        /*
        #4..10
        PurchOrderLine.SETCURRENTKEY("Document Type",Type,"No.");
        PurchOrderLine.SETFILTER(
          "Document Type",'%1|%2',
          PurchOrderLine."Document Type"::Order,
          PurchOrderLine."Document Type"::"Return Order");
        PurchOrderLine.SETRANGE(Type,PurchOrderLine.Type::Item);
        PurchOrderLine.SETRANGE("No.","No.");
        IF PurchOrderLine.FINDFIRST THEN
        #19..21
            PurchOrderLine."Document Type");
        */
    //end;
    //Unsupported feature: Code Modification on "CheckPurchLine(PROCEDURE 26)".
    //procedure CheckPurchLine();
    //Parameters and return type have not been exported.
    //>>>> ORIGINAL CODE:
    //begin
        /*
        IF "No." = '' THEN
          EXIT;
        PurchaseLine.SETCURRENTKEY(Type,"No.");
        PurchaseLine.SETRANGE(Type,PurchaseLine.Type::Item);
        PurchaseLine.SETRANGE("No.","No.");
        IF PurchaseLine.FINDFIRST THEN BEGIN
          IF CurrFieldNo = 0 THEN
            ERROR(Text000,TABLECAPTION,"No.",PurchaseLine."Document Type");
          IF CurrFieldNo = FIELDNO(Type) THEN
            ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",PurchaseLine.TABLECAPTION);
        END;
        */
    //end;
    //>>>> MODIFIED CODE:
    //begin
        /*
        PurchOrderLine.SETCURRENTKEY(Type,"No.");
        PurchOrderLine.SETRANGE(Type,PurchOrderLine.Type::Item);
        PurchOrderLine.SETRANGE("No.","No.");
        IF NOT PurchOrderLine.ISEMPTY THEN BEGIN
          IF CurrFieldNo = 0 THEN
            ERROR(Text000,TABLECAPTION,"No.",PurchOrderLine."Document Type");
          IF CurrFieldNo = FIELDNO(Type) THEN
            ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",PurchOrderLine.TABLECAPTION);
        END;
        */
    //end;
    //Unsupported feature: Code Modification on "CheckSalesLine(PROCEDURE 28)".
    //procedure CheckSalesLine();
    //Parameters and return type have not been exported.
    //>>>> ORIGINAL CODE:
    //begin
        /*
        SalesLine.SETCURRENTKEY(Type,"No.");
        SalesLine.SETRANGE(Type,SalesLine.Type::Item);
        SalesLine.SETRANGE("No.","No.");
        IF SalesLine.FINDFIRST THEN BEGIN
          IF CurrFieldNo = 0 THEN
            ERROR(Text001,TABLECAPTION,"No.",SalesLine."Document Type");
          IF CurrFieldNo = FIELDNO(Type) THEN
            ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",SalesLine.TABLECAPTION);
        END;
        */
    //end;
    //>>>> MODIFIED CODE:
    //begin
        /*
        SalesOrderLine.SETCURRENTKEY(Type,"No.");
        SalesOrderLine.SETRANGE(Type,SalesOrderLine.Type::Item);
        SalesOrderLine.SETRANGE("No.","No.");
        IF NOT SalesOrderLine.ISEMPTY THEN BEGIN
          IF CurrFieldNo = 0 THEN
            ERROR(Text001,TABLECAPTION,"No.",SalesOrderLine."Document Type");
          IF CurrFieldNo = FIELDNO(Type) THEN
            ERROR(CannotChangeFieldErr,FIELDCAPTION(Type),TABLECAPTION,"No.",SalesOrderLine.TABLECAPTION);
        END;
        */
    //end;
    //Unsupported feature: Code Modification on "CheckProdBOMLine(PROCEDURE 30)".
    //procedure CheckProdBOMLine();
    //Parameters and return type have not been exported.
    //>>>> ORIGINAL CODE:
    //begin
        /*
        ProdBOMLine.RESET;
        ProdBOMLine.SETCURRENTKEY(Type,"No.");
        ProdBOMLine.SETRANGE(Type,ProdBOMLine.Type::Item);
        #4..10
                 (ProdBOMHeader.Status = ProdBOMHeader.Status::Certified)
              THEN
                ERROR(Text004,TABLECAPTION,"No.");
              IF ProductionBOMVersion.GET(ProdBOMLine."Production BOM No.",ProdBOMLine."Version Code") AND
                 (ProductionBOMVersion.Status = ProductionBOMVersion.Status::Certified)
              THEN
                ERROR(CannotDeleteItemIfProdBOMVersionExistsErr,TABLECAPTION,"No.");
            UNTIL ProdBOMLine.NEXT = 0;
        END;
        */
    //end;
    //>>>> MODIFIED CODE:
    //begin
        /*
        #1..13
            UNTIL ProdBOMLine.NEXT = 0;
        END;
        */
    //end;
    //Unsupported feature: Deletion (VariableCollection) on "TestNoEntriesExist(PROCEDURE 1006).PurchaseLine(Variable 1002)".
    //Unsupported feature: Deletion (VariableCollection) on "CheckPurchLine(PROCEDURE 26).PurchaseLine(Variable 1001)".
    //Unsupported feature: Deletion (VariableCollection) on "CheckSalesLine(PROCEDURE 28).SalesLine(Variable 1001)".
    //Unsupported feature: Deletion (VariableCollection) on "CheckProdBOMLine(PROCEDURE 30).ProductionBOMVersion(Variable 1001)".
    var
        Proyecto: Code[10];
    var
        Proyecto: Code[10];
        UserDim: Record 50000;
    var
        ItemUnitMeasure: Record 5404;
        Proyecto: Code[10];
        UserDim: Record 50000;
    var
        PurchOrderLine: Record 39;
        SalesOrderLine: Record 37;
    var
        TextMercaderia: Label 'MERCADER´Š¢A';
        ConfInventario: Record 313;
}
